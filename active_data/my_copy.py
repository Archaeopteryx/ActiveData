# encoding: utf-8
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Author: Kyle Lahnakoski (kyle@lahnakoski.com)
#


from __future__ import unicode_literals
from __future__ import division
from __future__ import absolute_import

import os
import struct
import zlib
from pyLibrary import convert
from pyLibrary.debugs.logs import Log
from pyLibrary.env.files import File
#
#
# data='789CED5DFD6FA33618FE57BCFC7427B529E62340B4DBD4B5A956ED6E17A5A9EEA66B1551701356020C9B7EECAEFFFBECA4BD344D20409CC4DC5C555103F8C5EFE3E77D6CBF36F4CBD706464EE28E1A6DD0E877CEFAFBE77F763E773B47FDCEF1FEC9E1E97BF00D90280A6E7C72308EFE75E2181FA4B1E71074401026F44BE8930146C9ADEFA2C1F44C727015450493C489CF6EDDE6DF98DAB88F5D3C4241001244D224046EE4A136501A7BE0E9FE035A6E8C692DBE345E956E5CD28BAED2213BF9B511C5281C24C8452161177F6DB889834703EC0F43875A46CC0F663541380A52E247E1F3119C8EC74EF2C0BE9E86EC6E3E21D40A285C5906853F46C9911304578E7B03F6C197F9036DA0AA8A7509C80881291600135A2D0CF0284A030FA07F5227989C46F7317209F2C0AD13A4889ABA685C3B7E803C6AA375D100EFDED12338755D843CE45D4C3CB8410F7751E231201AFE0B17F65949E6FBC4EF00DD3AA1CB8080B0A9C296A2A9B6052D53350C9B5E104D8A9F8798DEDFBFF691C74AF91EBB5C85BAAEC2478637F56810D17A26B804CA27A79F3BC7DCA0FE8E61D244F7085CF92135F90CE41545965686E2F7C6BF066144F6C055EAD313F8011334A676C26B7F98260EAB1B3D35FCF52DC5F8DA093062D09224455B4154516DD37EDC030511FCF4B1F7C7D9C9C7DE874E1E8C1442E48C4174FD0CD00CC6A77A63C6BB84F8E110DCF96404D68F528E487DF2432FBAC3C09AE10475CB340DDE3815F4BA4F856C12D91E8852B22167CD17CEC21654D5C7CBC789BF5B91DFDDEA965478A9F052E1A5C24B85E7A5F0148C33A61C181F45E3384004551A696799C915E445F1D8899F8275693582B2CB74C309D664CC9C95925E72D5806CC7E6C39EA1C60E4CDB16BC99C8E672DFA1F1B6924818CD168D7DDDB42CC530747541223E77671AA118949FDBD188D7B8081B3A9253E273EA645ACF354564991591A432C3CB2D47CEF723D991233A9067C419225E63954C5BBBD68A0A4E027A6A65D9957CD314D3BCA44C79660C6D98C0AF3A9BD4E82097FED886492547B1F45CAD81AAA6E970C3FDD75AD8F08DC53964253B253BE7B059774C9D654A20EABC76D11D21F7E67C02C7FB68781485AC106634C838C3A2E9554406D1902572A6E78BC4658242678C06D7343ADBCFA32E1281E961C00ED3CB70E2B6C1CFACF1069E9F0C62878C7EC96EB0037A4D93B6FA1EA05CACC04BB5D56CE986ADAB2DCBB42D4BB5F21346D0520D68164F84AC4CB9AD68A6A2E353E5ED1EC0886218054174C7F24AB471DA9586AC5A53A3716A424DD76C5B87F991AA585ACBD07617A9227723520AA4144829E02F057CE6B099A636BD9EB5C28DAD289AA6644C52374B11685950B737B880558D22D53450D375C886C7E7DDE3C37E07F4FFEA76403CBDE105FD09BBBD4EF7B0D70187C7C7604AC03848877E880FE6BE11744F94B902DDC3FED1EF7945E270089BF4E345A92DB49D62ABD0DE5D788B97BC910A2215442A88580AF2CCF2C3385ECC7B0CE868A8D258A188D55D0EF097A17171511C0E0E2BECA5163A5A8AD6B2842082788B69926B3F00D766DD0647CD59302AD24A51310CEA106EB5817979729F0BE1724DEF38955506822D888DD5842FD446330D7B8B439C55FE8B961E951CAB35C738776B79966B20BA02747055034E68B8695D4FC373CC6BDF49AEB93AF92DDEE0A97ED0BE48EDF0183315B3BB857C6061071793518E1F66A4A926671825589A6AC5629F3BBD7ECAA83628B4BCB70FC14FEFE827D73E33E3390FD3565A4BD28662B04EB45E43D25AD23A67772D75F37DE4DE208FA39216302A5287520C831DAD5999391B8E6B0E338719C86A9BB54360473C6B95E0594D40E63D402C6AB9A668EC8A78B008F3EA8E3857ADCB355C4F2C6A433EE1F1CE98C4AF45BB7C9BB54340BCE44BBD41E6246EB926EBE6BFF81C131AE2DE87DEC9B1BF11412B6CBAAE788847BD1F09720E6257D4724DD1A80DFF84067C56D90D4C63C5C80817ACC9DEB2165C319FF86172C899BB72339E63B2A1AA55DF525D785345717672D852B17267F28BB75B299AAD99CA865FBC51D879D1168364ECCBD897B1CF3DF6B94E802B279B361898251CFCFF06A0AAA886A1EC2A00CB35D1765F1852F2D922A8AA962E4818D7A207973A217542EAC456D21E9C27E3E5EC6F21AC4B3BFC7F0D62682BF61A0F2F170EE2720DB26CBE74F214ADEBCF567719ECAA66281B7E234969EE8B3638906A22D544AA490DD464138B4822CE076442AFFA86F0CC7C9E50ACAD531728C3428645F5C77FE86FF0300595FEF99B1FCE1AE9693D79CDA7CFCADC40A495EAF9AACFAACA01873963F5F159BC1D10F584759EFA3CF8B46071C72F2728E0F05AEF0A05DF36F21283B9B7F2405D33CCC5B1746FEE7F6E2C6B9FD2C4BBFC0F7E8911A6'
# data=convert.hex2bytes(data)
# Log.note("{{length}} {{hex}} {{pack}}", length=len(data), hex=hex(len(data)), pack=convert.bytes2hex(struct.pack('<l', len(data))))
#
# Log.note("{{json}}", json=convert.utf82unicode(zlib.decompress(data)))




# for subdir, dirs, files in os.walk("c:/users/kyle/code"):
#     for file in files:
#         #print os.path.join(subdir, file)
#         filepath = subdir + os.sep + file
#
#         if ".idea" in filepath or filepath.endswith(".iml"):
#             file = File(filepath)
#             newfile = File(file.abspath.replace("c:/users/kyle/", "e:/"))
#             newfile.write_bytes(file.read_bytes())
